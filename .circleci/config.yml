version: 2.1

executors:
  py36:
    docker:
      - image: 350138855857.dkr.ecr.eu-west-2.amazonaws.com/kedro-builder:3.6
  py37:
    docker:
      - image: 350138855857.dkr.ecr.eu-west-2.amazonaws.com/kedro-builder:3.7
  py38:
    docker:
      - image: 350138855857.dkr.ecr.eu-west-2.amazonaws.com/kedro-builder:3.8


commands:
  setup_conda:
    description: Activate conda environment
    steps:
      - run:
          name: Run conda.sh
          command: echo ". /home/circleci/miniconda/etc/profile.d/conda.sh" >> $BASH_ENV
      - run:
          name: Activate conda environment
          command: echo "conda deactivate; conda activate kedro_builder" >> $BASH_ENV

  setup_requirements:
    description: Install PIP dependencies
    steps:
      - run:
          name: Echo python version for debugging
          command: 'echo "Python version: $(python --version 2>&1)"'
      - run:
          name: Install pip setuptools
          command: make install-pip-setuptools
      - run:
          name: Install requirements
          command: pip install -r requirements.txt -U
      - run:
          name: Install venv for some pre-commit hooks
          command: conda install -y virtualenv
      - run:
          name: Install test requirements
          command: pip install -r test_requirements.txt -U

  setup_pre_commit:
    description: Install pre-commit hooks
    steps:
      - run:
          name: Install pre-commit hooks
          command: pre-commit install --install-hooks
      - run:
          name: Run pre-commit hooks
          command: pre-commit install --hook-type pre-push

  unit_tests:
    description: Run unit tests
    steps:
      - checkout
      - setup_conda
      - setup_requirements
      - run:
          # Since recently Spark installation for some reason does not have permissions to execute
          # /home/circleci/miniconda/envs/kedro_builder/lib/python3.X/site-packages/pyspark/bin/spark-class.
          # So fixing it manually here.
          name: Fix Spark permissions
          command: sudo chmod -R u+x /home/circleci/miniconda/envs/kedro_builder/lib/
      - run:
          name: Run unit tests
          command: make test

  lint:
    description: Run linters
    steps:
      - checkout
      - setup_conda
      - setup_requirements
      - setup_pre_commit
      - run:
          name: Run linters
          command: make lint
      - run:
          name: Check legal headers
          command: make legal

  e2e_tests:
    description: Run all end to end tests
    steps:
      - checkout
      - setup_conda
      - setup_requirements
      - run:
          name: Run e2e tests
          command: make e2e-tests

  build_docs:  # NOTE: requires python3.6+
    description: Build docs
    steps:
      - checkout
      - setup_conda
      - setup_requirements
      - run:
          name: Build docs
          command: make build-docs

  pip_compile:
    description: Pip-compile requirements file
    steps:
      - checkout
      - setup_conda
      - setup_requirements
      - run:
          name: Pip-compile requirements file
          command: make pip-compile

jobs:
  unit_tests_36:
    executor: py36
    steps: [unit_tests]

  linters_36:
    executor: py36
    steps: [lint]

  e2e_tests_36:
    executor: py36
    steps: [e2e_tests]

  docs_36:
    executor: py36
    steps: [build_docs]

  unit_tests_37:
    executor: py37
    steps: [unit_tests]

  linters_37:
    executor: py37
    steps: [lint]

  e2e_tests_37:
    executor: py37
    steps: [e2e_tests]

  docs_37:
    executor: py37
    steps: [build_docs]

  unit_tests_38:
    executor: py38
    steps: [unit_tests]

  linters_38:
    executor: py38
    steps: [lint]

  e2e_tests_38:
    executor: py38
    steps: [e2e_tests]

  pip_compile_36:
    executor: py36
    steps: [pip_compile]

  pip_compile_37:
    executor: py37
    steps: [pip_compile]

  pip_compile_38:
    executor: py38
    steps: [pip_compile]

  all_circleci_checks_succeeded:
    docker:
      - image: circleci/python # any light-weight image

    steps:
      - run:
          name: Success!
          command: echo "All checks passed"

workflows:
  version: 2
  regular:
    jobs:
      - unit_tests_36
      - linters_36
      - e2e_tests_36
      - docs_36
      - unit_tests_37
      - linters_37
      - e2e_tests_37
      - docs_37
      - unit_tests_38
      - linters_38
      - e2e_tests_38
      - pip_compile_36
      - pip_compile_37
      - pip_compile_38
      - all_circleci_checks_succeeded:
          requires:
            - unit_tests_36
            - linters_36
            - e2e_tests_36
            - docs_36
            - unit_tests_37
            - linters_37
            - e2e_tests_37
            - docs_37
            - unit_tests_38
            - linters_38
            - e2e_tests_38
            - pip_compile_36
            - pip_compile_37
            - pip_compile_38
